generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Category {
  id        String    @id @default(uuid())
  name      String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Product   Product[]

  @@map("category")
}

model Brand {
  id        String    @id @default(uuid())
  name      String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Product   Product[]

  @@map("brand")
}

model Color {
  id          String        @id @default(uuid())
  name        String        @unique
  value       String        @unique
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  ProductItem ProductItem[]

  @@map("color")
}

model Size {
  id          String        @id @default(uuid())
  name        String        @unique
  value       String        @unique
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  ProductItem ProductItem[]

  @@map("size")
}

model Product {
  id          String        @id @default(uuid())
  name        String        @unique
  cost        Decimal
  description String
  trending    Boolean       @default(false)
  brand_id    String
  brand       Brand         @relation(fields: [brand_id], references: [id])
  category_id String
  category    Category      @relation(fields: [category_id], references: [id])
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  ProductItem ProductItem[]

  @@map("product")
}

model ProductItem {
  id            String          @id @default(uuid())
  code          String          @unique
  product       Product         @relation(fields: [product_id], references: [id])
  product_id    String
  color         Color           @relation(fields: [color_id], references: [id])
  color_id      String
  size          Size            @relation(fields: [size_id], references: [id])
  size_id       String
  price         Decimal
  descont       Int             @default(0)
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  ProductImages ProductImages[]

  @@index([product_id, size_id, color_id], name: "unique_contract")
  @@map("product_item")
}

model ProductImages {
  id              String      @id @default(uuid())
  url             String
  product_item    ProductItem @relation(fields: [product_item_id], references: [id])
  product_item_id String

  @@index([product_item_id, url], name: "unique_image_contract")
  @@map("product_images")
}
